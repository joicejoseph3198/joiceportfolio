{"ast":null,"code":"var _jsxFileName = \"H:\\\\Web Dev\\\\React Learning\\\\web-1\\\\src\\\\components\\\\ContactMe\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"./style.scss\";\nimport gsap from 'gsap';\nimport SplitText from \"../../utils/Split3.min\";\nimport cn from 'classnames';\nimport useOnScreen from '../hooks/useOnScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactMe() {\n  _s();\n\n  const ref = useRef();\n  const [reveal, setReveal] = useState(false);\n  const onScreen = useOnScreen(ref);\n  useEffect(() => {\n    if (onScreen) setReveal(onScreen);\n  }, [onScreen]);\n  useEffect(() => {\n    if (reveal) {\n      const split = new SplitText(\"#about-info\", {\n        type: \"lines\",\n        linesClass: \"lineChildren\"\n      });\n      gsap.to(split.lines, {\n        duration: 1,\n        y: -20,\n        opacity: 1,\n        stagger: 0.1,\n        ease: \"power4.out\"\n      });\n    }\n  }, [reveal]); //for btns\n\n  function slideOpen() {\n    gsap.to([\"#contact-content\", \"#contact-form\"], {\n      xPercent: -73\n    });\n  }\n\n  function slideClose() {\n    gsap.to([\"#contact-content\", \"#contact-form\"], {\n      xPercent: 0\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: cn(\"contact-page\", {\n      'is-reveal': reveal\n    }),\n    id: \"contact-page\",\n    \"data-scroll-section\": true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"contact-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"header\",\n        children: \"That's enough about me. Let's talk about you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Do you have any suggestions or feedback for my website? Would you have any work to offer me? Feel free to leave a message. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 47\n        }, this), \"I would love to hear from you.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      id: \"contact-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"close-btn\",\n          onClick: slideClose,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"https://formspree.io/f/xknkvqqj\",\n          method: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"name\",\n              children: \" Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"name\",\n              children: \" Email \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              name: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"name\",\n              children: \" Message \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"message\",\n              name: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"slide-btn\",\n          onClick: slideOpen,\n          children: \"slide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactMe, \"A34ViuF9v54GN9pr7R/DaTZJmbU=\", false, function () {\n  return [useOnScreen];\n});\n\n_c = ContactMe;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactMe\");","map":{"version":3,"sources":["H:/Web Dev/React Learning/web-1/src/components/ContactMe/index.js"],"names":["React","useEffect","useRef","useState","gsap","SplitText","cn","useOnScreen","ContactMe","ref","reveal","setReveal","onScreen","split","type","linesClass","to","lines","duration","y","opacity","stagger","ease","slideOpen","xPercent","slideClose"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport \"./style.scss\";\r\nimport gsap from 'gsap';\r\nimport SplitText from \"../../utils/Split3.min\";\r\nimport cn from 'classnames';\r\nimport useOnScreen from '../hooks/useOnScreen';\r\n\r\nexport default function ContactMe() {\r\n    const ref = useRef();\r\n    const [reveal, setReveal] = useState(false);\r\n    const onScreen = useOnScreen(ref)\r\n\r\n    useEffect(()=> {\r\n        if(onScreen) setReveal(onScreen);\r\n    }, [onScreen]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (reveal) {\r\n            const split = new SplitText(\"#about-info\",{\r\n                type: \"lines\",\r\n                linesClass: \"lineChildren\",\r\n            });\r\n            \r\n            gsap.to(split.lines, {\r\n                duration: 1,\r\n                y: -20,\r\n                opacity: 1,\r\n                stagger: 0.1,\r\n                ease: \"power4.out\",\r\n            });\r\n       }\r\n    },[reveal]);\r\n    \r\n    //for btns\r\n\r\n    function slideOpen() {\r\n       gsap.to([\"#contact-content\",\"#contact-form\"],{xPercent:-73})\r\n    }\r\n\r\n    function slideClose() {\r\n        gsap.to([\"#contact-content\",\"#contact-form\"],{xPercent:0})\r\n    }\r\n    \r\n\r\n    return (\r\n    <div ref={ref} className={cn(\"contact-page\",{'is-reveal':reveal })} id=\"contact-page\" data-scroll-section>\r\n        <div id=\"contact-content\">\r\n            <div id=\"header\">\r\n                That's enough about me. Let's talk about you. \r\n            </div>\r\n            <p>\r\n                Do you have any suggestions or feedback for my website? Would you have any work to offer me? \r\n                Feel free to leave a message. <br/>I would love to hear from you.\r\n            </p>\r\n            <br/>\r\n        </div>\r\n        <div className=\"form\" id=\"contact-form\">\r\n            <div id=\"form-content\">\r\n                <div id=\"close-btn\" onClick={slideClose}>close</div>\r\n                <form action=\"https://formspree.io/f/xknkvqqj\" method=\"post\">\r\n                    <div className=\"form-group\">\r\n                        <label for=\"name\"> Name </label>\r\n                        <input type=\"text\" id=\"name\" name=\"Name\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"name\"> Email </label>\r\n                        <input type=\"text\" id=\"email\" name=\"Email\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"name\"> Message </label>\r\n                        <textarea id=\"message\" name=\"Message\"></textarea>\r\n                    </div>\r\n                    <button type=\"submit\">Submit</button>\r\n\r\n                </form>\r\n                <div id=\"slide-btn\" onClick={slideOpen}>slide</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}