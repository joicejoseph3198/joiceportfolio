{"ast":null,"code":"import{useEffect}from'react';import LocomotiveScroll from'locomotive-scroll';import'locomotive-scroll/src/locomotive-scroll.scss';import ScrollTrigger from'gsap/ScrollTrigger';import gsap from'gsap';gsap.registerPlugin(ScrollTrigger);export default function useLocoScroll(start){useEffect(function(){if(!start)return;var scrollEl=document.querySelector('#main-container');var locoScroll=new LocomotiveScroll({el:scrollEl,smooth:true,smartphone:{smooth:true},tablet:{smooth:true},multiplier:1,class:'is-reveal'});locoScroll.on('scroll',function(){ScrollTrigger.update();});ScrollTrigger.scrollerProxy(scrollEl,{scrollTop:function scrollTop(value){if(locoScroll){return arguments.length?locoScroll.scrollTo(value,0,0):locoScroll.scroll.instance.scroll.y;}return null;},scrollLeft:function scrollLeft(value){if(locoScroll){return arguments.length?locoScroll.scrollTo(value,0,0):locoScroll.scroll.instance.scroll.x;}return null;}});var lsUpdate=function lsUpdate(){if(locoScroll){locoScroll.update();}};ScrollTrigger.addEventListener('refresh',lsUpdate);ScrollTrigger.refresh();return function(){if(locoScroll){ScrollTrigger.removeEventListener('refresh',lsUpdate);locoScroll.destroy();locoScroll=null;}};},[start]);}","map":{"version":3,"sources":["H:/Web Dev/React Learning/web-1/src/components/hooks/useLocoScroll.js"],"names":["useEffect","LocomotiveScroll","ScrollTrigger","gsap","registerPlugin","useLocoScroll","start","scrollEl","document","querySelector","locoScroll","el","smooth","smartphone","tablet","multiplier","class","on","update","scrollerProxy","scrollTop","value","arguments","length","scrollTo","scroll","instance","y","scrollLeft","x","lsUpdate","addEventListener","refresh","removeEventListener","destroy"],"mappings":"AAAA,OAAQA,SAAR,KAAwB,OAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,mBAA7B,CACA,MAAO,8CAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CAEAA,IAAI,CAACC,cAAL,CAAoBF,aAApB,EAEA,cAAe,SAASG,CAAAA,aAAT,CAAuBC,KAAvB,CAA6B,CACxCN,SAAS,CAAC,UAAM,CACZ,GAAG,CAACM,KAAJ,CAAW,OAEX,GAAMC,CAAAA,QAAQ,CAAEC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAhB,CAEA,GAAIC,CAAAA,UAAU,CAAG,GAAIT,CAAAA,gBAAJ,CAAqB,CAClCU,EAAE,CAAEJ,QAD8B,CAElCK,MAAM,CAAE,IAF0B,CAGlCC,UAAU,CAAE,CACRD,MAAM,CAAE,IADA,CAHsB,CAMlCE,MAAM,CAAE,CACJF,MAAM,CAAE,IADJ,CAN0B,CASlCG,UAAU,CAAE,CATsB,CAUlCC,KAAK,CAAE,WAV2B,CAArB,CAAjB,CAYAN,UAAU,CAACO,EAAX,CAAc,QAAd,CAAwB,UAAK,CACzBf,aAAa,CAACgB,MAAd,GACH,CAFD,EAIAhB,aAAa,CAACiB,aAAd,CAA4BZ,QAA5B,CAAqC,CACjCa,SADiC,oBACvBC,KADuB,CACjB,CACZ,GAAGX,UAAH,CAAe,CACX,MAAOY,CAAAA,SAAS,CAACC,MAAV,CACLb,UAAU,CAACc,QAAX,CAAoBH,KAApB,CAA0B,CAA1B,CAA4B,CAA5B,CADK,CAELX,UAAU,CAACe,MAAX,CAAkBC,QAAlB,CAA2BD,MAA3B,CAAkCE,CAFpC,CAGH,CACD,MAAO,KAAP,CACH,CARgC,CASjCC,UATiC,qBAStBP,KATsB,CAShB,CACb,GAAIX,UAAJ,CAAgB,CACZ,MAAOY,CAAAA,SAAS,CAACC,MAAV,CAAmBb,UAAU,CAACc,QAAX,CAAoBH,KAApB,CAA0B,CAA1B,CAA4B,CAA5B,CAAnB,CACLX,UAAU,CAACe,MAAX,CAAkBC,QAAlB,CAA2BD,MAA3B,CAAkCI,CADpC,CAEH,CACL,MAAO,KAAP,CACC,CAfgC,CAArC,EAkBA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAGpB,UAAH,CAAc,CACVA,UAAU,CAACQ,MAAX,GACH,CACJ,CAJD,CAMAhB,aAAa,CAAC6B,gBAAd,CAA+B,SAA/B,CAA0CD,QAA1C,EACA5B,aAAa,CAAC8B,OAAd,GAEA,MAAO,WAAM,CACT,GAAGtB,UAAH,CAAe,CACXR,aAAa,CAAC+B,mBAAd,CAAkC,SAAlC,CAA6CH,QAA7C,EACApB,UAAU,CAACwB,OAAX,GACAxB,UAAU,CAAG,IAAb,CACH,CACJ,CAND,CAQH,CAxDQ,CAwDN,CAACJ,KAAD,CAxDM,CAAT,CAyDH","sourcesContent":["import {useEffect} from 'react';\r\nimport LocomotiveScroll from 'locomotive-scroll';\r\nimport 'locomotive-scroll/src/locomotive-scroll.scss';\r\nimport ScrollTrigger from 'gsap/ScrollTrigger';\r\nimport gsap from 'gsap';\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default function useLocoScroll(start){\r\n    useEffect(() => {\r\n        if(!start) return;\r\n\r\n        const scrollEl= document.querySelector('#main-container');\r\n\r\n        let locoScroll = new LocomotiveScroll({\r\n            el: scrollEl,\r\n            smooth: true,\r\n            smartphone: {\r\n                smooth: true\r\n            },\r\n            tablet: {\r\n                smooth: true\r\n            },\r\n            multiplier: 1,\r\n            class: 'is-reveal',\r\n        });\r\n        locoScroll.on('scroll', ()=> {\r\n            ScrollTrigger.update(); \r\n        });\r\n\r\n        ScrollTrigger.scrollerProxy(scrollEl,{\r\n            scrollTop(value){\r\n                if(locoScroll) {\r\n                    return arguments.length \r\n                    ? locoScroll.scrollTo(value,0,0)\r\n                    : locoScroll.scroll.instance.scroll.y;\r\n                }\r\n                return null;\r\n            },\r\n            scrollLeft(value){\r\n                if (locoScroll) {\r\n                    return arguments.length ? locoScroll.scrollTo(value,0,0)\r\n                    : locoScroll.scroll.instance.scroll.x;\r\n                }\r\n            return null;\r\n            },\r\n        });\r\n\r\n        const lsUpdate = () => {\r\n            if(locoScroll){\r\n                locoScroll.update();\r\n            }\r\n        }\r\n\r\n        ScrollTrigger.addEventListener('refresh', lsUpdate);\r\n        ScrollTrigger.refresh();\r\n\r\n        return () => {\r\n            if(locoScroll) {\r\n                ScrollTrigger.removeEventListener('refresh', lsUpdate);\r\n                locoScroll.destroy();\r\n                locoScroll = null;\r\n            }\r\n        };\r\n\r\n    }, [start]);\r\n}"]},"metadata":{},"sourceType":"module"}